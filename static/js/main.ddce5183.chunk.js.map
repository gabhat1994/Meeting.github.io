{"version":3,"sources":["Components/Header.js","Components/MeetingListSentPage.js","Components/HomePage.js","actions/meetingSetupActions.js","constant/constant.js","Components/PageNotFound.js","Components/MeetingSetupPage.js","App.js","serviceWorker.js","store.js","reducers/meetingSetupReducer.js","index.js"],"names":["Header","activeStyle","color","className","to","exact","MeetingListSentPage","props","meetingDeatils","useSelector","state","meetingSentReducer","style","marginLeft","marginTop","map","data","key","ShortID","generate","selectedTimeSlot","name","description","selectedDate","HomePage","useState","users","setUsers","date","setDate","time","setTime","dispatch","useDispatch","useEffect","a","axios","get","dateData","timeData","fetchData","meeteingHandler","type","payload","meetingSetup","history","push","user","id","onClick","PageNotFound","MeetingSetupPage","meeting","meetingSetupReducer","show","setShow","showForm","setShowForm","success","setSuccess","showDate","setShowDate","setSelectedDate","setDescription","setSelectedTimeSlot","textAlign","paddingRight","formHandler","onSubmit","postBody","formatedData","meetingSent","class","placeholder","onChange","e","target","value","App","path","component","Boolean","window","location","hostname","match","reducer","combineReducers","action","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ddce5183.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Header = () => {\n  const activeStyle = { color: \"#F15B2A\" };\n  return (\n    <div className=\"full-width\">\n      <ul>\n        <li>\n          {\" \"}\n          <NavLink to=\"/\" activeStyle={activeStyle} exact>\n            Home\n          </NavLink>\n        </li>\n\n        <li>\n          <NavLink to=\"/meetingsentlist\" activeStyle={activeStyle}>\n            Meeting Sent List\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n\n    /* <header className=\"header\">\n        <div className=\"brand\">\n          <NavLink to=\"/\" activeStyle={activeStyle} exact>\n            Home\n          </NavLink>\n          {\" | \"}\n          <NavLink to=\"/meetingsentlist\" activeStyle={activeStyle}>\n            Meeting Sent List\n          </NavLink>\n        </div>\n      </header> */\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport ShortID from \"shortid\";\nimport { useSelector, useDispatch } from \"react-redux\";\nfunction MeetingListSentPage(props) {\n  const meetingDetailsState = useSelector((state) => state.meetingSentReducer);\n  const { meetingDeatils } = meetingDetailsState;\n  return (\n    <div className=\"jumbotron\">\n      <div\n        className=\"col-sm-6\"\n        style={{ marginLeft: \"186px\", marginTop: \"30px\" }}\n      >\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>Time Slot</th>\n              <th>Meetings</th>\n            </tr>\n          </thead>\n          <tbody>\n            {meetingDeatils.map((data) => {\n              return (\n                <tr key={ShortID.generate()}>\n                  <td>{data.selectedTimeSlot}</td>\n                  <td>\n                    {data.name}\n                    <br />\n                    {data.description}\n                    <br />\n                    {data.selectedDate}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default MeetingListSentPage;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {  useDispatch } from \"react-redux\";\nimport { meetingSetup } from \"../actions/meetingSetupActions\";\n\nfunction HomePage(props) {\n  const [users, setUsers] = useState([]);\n  const [date, setDate] = useState([]);\n  const [time, setTime] = useState([]);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const { data } = await axios.get(\"./data.json\");\n      setUsers(data.users);\n      setDate(data.dateData);\n      setTime(data.timeData);\n    };\n\n    fetchData();\n  }, []);\n\n  const meeteingHandler = (name) => {\n    if (name !== null || name !== \"\") {\n      dispatch(meetingSetup(name, date, time));\n      props.history.push(\"/meetingSetup\");\n    }\n  };\n\n  return (\n    <div\n      className=\"col-sm-6\"\n      style={{ marginLeft: \"186px\", marginTop: \"30px\" }}\n    >\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>User List</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {users.map((user) => {\n            return (\n              <tr key={user.id}>\n                <td>{user.name}</td>\n\n                <td>\n                  <button\n                    onClick={() => meeteingHandler(user.name)}\n                    className=\"btn btn-outline-danger\"\n                  >\n                    Meet\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import {\n  MEETING_SETUP_REQUEST,\n  MEETING_SENT_REQUEST,\n} from \"../constant/constant\";\n\nconst meetingSetup = (name, date, time) => async (dispatch) => {\n  dispatch({ type: MEETING_SETUP_REQUEST, payload: { name, date, time } });\n};\n\nconst meetingSent = (data) => async (dispatch) => {\n  let formatedData = [];\n  formatedData.push(data);\n  dispatch({ type: MEETING_SENT_REQUEST, payload: formatedData });\n};\n\nexport { meetingSetup, meetingSent };\n","export const MEETING_SETUP_REQUEST = \"MEETING_SETUP_REQUEST\";\nexport const MEETING_SENT_REQUEST = \"MEETING_SENT_REQUEST\";\n","import React from \"react\";\n\nconst PageNotFound = () => <h1>Oops! Page not found.</h1>;\n\nexport default PageNotFound;","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { meetingSent } from \"../actions/meetingSetupActions\";\n\nfunction MeetingSetupPage(props) {\n  const meeting = useSelector((state) => state.meetingSetupReducer);\n  const [show, setShow] = useState(false);\n  const [showForm, setShowForm] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [showDate, setShowDate] = useState(true);\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState(\"\");\n  const { name, date, time } = meeting;\n  const dispatch = useDispatch()\n\n  const meeteingHandler = (date) => {\n    setSelectedDate(date);\n    setShow(true);\n  };\n  const formHandler = (time) => {\n    setSelectedTimeSlot(time);\n    setShowForm(true);\n  };\n const postBody=(name, selectedDate, selectedTimeSlot, description) =>{\n   let data ={\n   \"name\":name,\n   \"selectedDate\":selectedDate,\n   \"selectedTimeSlot\":selectedTimeSlot,\n   \"description\":description\n\n\n   }\n   return  data\n\n }\n\n  const submitHandler = () => {\n    setShowForm(false);\n    setShow(false);\n    setShowDate(false);\n    setSuccess(true);\n    \n    let data = postBody(name, selectedDate, selectedTimeSlot, description)\n\n    dispatch(meetingSent(data));\n  };\n  return (\n    <>\n      <h1 style={{ textAlign: \"center\" }}>{name}'s Calender</h1>;\n      <div>\n        {showDate === true\n          ? date.map((date) => {\n              return (\n                <button\n                  style={{ paddingRight: \"10px\" }}\n                  onClick={() => meeteingHandler(date.date)}\n                  className=\"btn-primary btn-color btn-bg-color btn-sm col-xs-2 margin-left\"\n                >\n                  {date.date}\n                </button>\n              );\n            })\n          : null}\n      </div>\n      <br />\n      <div className=\"col-sm-12\">\n        {show === true\n          ? time.map((time) => {\n              return (\n                <button\n                  onClick={() => formHandler(time.time)}\n                  className=\"col-sm-3 button\"\n                >\n                  {time.time}\n                </button>\n              );\n            })\n          : null}\n      </div>\n      {showForm === true ? (\n        <form onSubmit={submitHandler}>\n          <label>\n            Meeting {name} at {selectedTimeSlot} on {selectedDate}\n          </label>\n          <textarea\n            name=\"text\"\n            class=\"feedback-input\"\n            placeholder=\"Comment\"\n            onChange={(e) => setDescription(e.target.value)}\n          ></textarea>\n          <button type=\"submit\" className=\"button primary\">\n            Submit\n          </button>\n        </form>\n      ) : null}\n      {success === true ? (\n        <div className=\"text-center\" style={{ textAlign: \"center\" }}>\n          Invite Sent SUccessfully\n        </div>\n      ) : null}\n    </>\n  );\n}\n\nexport default MeetingSetupPage;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from \"./Components/Header\";\nimport MeetingListSentPage from \"./Components/MeetingListSentPage\";\nimport HomePage from \"./Components/HomePage\";\nimport PageNotFound from \"./Components/PageNotFound\";\nimport MeetingSetupPage from \"./Components/MeetingSetupPage\";\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" exact={true} component={HomePage} />\n        <Route path=\"/meetingsentlist\" component={MeetingListSentPage} />\n        <Route path=\"/meetingSetup\" component={MeetingSetupPage} />\n        <Route component={PageNotFound} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\nimport {\n  meetingSetupReducer,\n  meetingSentReducer,\n} from \"./reducers/meetingSetupReducer\";\nimport thunk from \"redux-thunk\";\n\nconst initialState = {};\n\nconst reducer = combineReducers({\n  meetingSetupReducer: meetingSetupReducer,\n  meetingSentReducer: meetingSentReducer,\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeEnhancer(applyMiddleware(thunk))\n);\n\nexport default store;\n","import {\n  MEETING_SETUP_REQUEST,\n  MEETING_SENT_REQUEST,\n} from \"../constant/constant\";\n\nfunction meetingSetupReducer(state = {}, action) {\n  switch (action.type) {\n    case MEETING_SETUP_REQUEST:\n      return {\n        ...state,\n        name: action.payload.name,\n        date: action.payload.date,\n        time: action.payload.time,\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction meetingSentReducer(state = {}, action) {\n  switch (action.type) {\n    case MEETING_SENT_REQUEST:\n      return {\n        ...state,\n        meetingDeatils: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport { meetingSetupReducer, meetingSentReducer };\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\n\nrender(\n  <Provider store={store}>\n  <Router>\n    <App />\n  </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}